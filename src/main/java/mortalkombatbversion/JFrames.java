/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package mortalkombatbversion;

import components.Items;
import Characters.Player;
import java.awt.Color;
import java.awt.event.*;
import java.io.IOException;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 * Класс визуализации программы
 */
public class JFrames extends javax.swing.JFrame {

    /**
     * Экземпляр класса, который будет реализовывать логику текущей игры
     */
    private Game game;
    /**
     * Игрок
     */
    private Player player;
    /**
     * Противник
     */
    private Fighter enemy;
    /**
     * Список инвентаря игрока
     */
    private Items[] items = new Items[3];
    /**
     * Словарь локаций в игре, содержащий:
     * <ul>
     * <li>JCheckBox при выборе которого данная локация будет в игре</li>
     * <li>Сторчку пути к изображению данной локации</li>
     * </ul>
     */
    private HashMap<JCheckBox, String> allLocations = new HashMap<JCheckBox, String>();
    /**
     * Словарь локаций в игре, которые выбрал игрок
     *
     * @see JFrames#allLocations
     */
    private HashMap<String, String> chosenLocations;
    /**
     * Словарь выбранных игроком локаций, содержащий:
     * <ul>
     * <li>Сторчку пути к изображению локаци</li>
     * <li>Количество побед, которое должно произойти на данной локации</li>
     * </ul>
     */
    private Map<String, Integer> locationsOrder;
    /**
     * Текущая локация
     */
    private String currentLocation;
    /**
     * Оставшееся количество побед, необходимое для смены локации
     */
    private int reamainQuantity;
    /**
     * Счётчик побед игрока
     */
    private int currentVictory;
    /**
     * Счётчик уровня игрока
     */
    private int currentLevel;

    /**
     * Creates new form JFrame
     */
    public JFrames() {
        initComponents();
        setGame();
        recordsTable.getTableHeader().setBackground(Color.BLACK);
        recordsTable.getTableHeader().setForeground(Color.red);
        recordsTableScrollPane.getViewport().setBackground(Color.BLACK);
        cursePicture.setVisible(false);
        recordsTable.getTableHeader().setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        allLocations.put(junglesCheckBox, "Куатанские_джунгли.png");
        allLocations.put(deadForestCheckBox, "Мёртвый_лес.png");
        allLocations.put(campCheckBox, "Лагерь_беженцов.png");
        allLocations.put(harborCheckBox, "Бухта.png");
        allLocations.put(hellCheckBox, "Перекрёстки.png");
        allLocations.put(skyCastleCheckBox, "Небесный_храм.png");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fightFrame = new javax.swing.JFrame();
        fightPanel = new javax.swing.JPanel();
        cursePicture = new javax.swing.JLabel();
        playerPictureLabel = new javax.swing.JLabel();
        attackButton = new javax.swing.JButton();
        defendButton = new javax.swing.JButton();
        playerHealthProgressBar = new javax.swing.JProgressBar();
        enemyPictureLabel = new javax.swing.JLabel();
        enemyHealthProgressBar = new javax.swing.JProgressBar();
        enemyNameLabel = new javax.swing.JLabel();
        enemyDamageLabel = new javax.swing.JLabel();
        playerDamageLabel = new javax.swing.JLabel();
        playerQuantityDamageLabel = new javax.swing.JLabel();
        enemyQuantityDamageLabel = new javax.swing.JLabel();
        playerLevelLabel = new javax.swing.JLabel();
        playerQuantityHeathLabel = new javax.swing.JLabel();
        enemyQuantityHealthLabel = new javax.swing.JLabel();
        experienceLabel = new javax.swing.JLabel();
        pointsLabel = new javax.swing.JLabel();
        quantityExperienceLabel = new javax.swing.JLabel();
        quantityPointsLabel = new javax.swing.JLabel();
        enemyLevelLabel = new javax.swing.JLabel();
        turnInfoLabel = new javax.swing.JLabel();
        commentAboutFightLabel = new javax.swing.JLabel();
        playerNameLabel = new javax.swing.JLabel();
        specialCommentAboutFightLabel = new javax.swing.JLabel();
        goodsButton = new javax.swing.JButton();
        curseButton = new javax.swing.JButton();
        locationPicture = new javax.swing.JLabel();
        infoAboutWinnerDialog = new javax.swing.JDialog();
        infoAboutWinnerPanel = new javax.swing.JPanel();
        winnerNameLabel = new javax.swing.JLabel();
        closeInfoAboutWinnerButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        winWithRecordDialog = new javax.swing.JDialog();
        winWithRecordPanel = new javax.swing.JPanel();
        winWithRecordLabel = new javax.swing.JLabel();
        nameForRecordTableTextField = new javax.swing.JTextField();
        winWithRecordLabel1 = new javax.swing.JLabel();
        finishWinWithRecordGameButton = new javax.swing.JButton();
        backgroundImage = new javax.swing.JLabel();
        recordsTableDialog = new javax.swing.JDialog();
        recordsTablePanel = new javax.swing.JPanel();
        recordsTableLabel = new javax.swing.JLabel();
        recordsTableScrollPane = new javax.swing.JScrollPane();
        recordsTable = new javax.swing.JTable();
        closeRecordsTableButton = new javax.swing.JButton();
        shortLogoLabel = new javax.swing.JLabel();
        winWithoutRecordDialog = new javax.swing.JDialog();
        winWithoutRecordPanel = new javax.swing.JPanel();
        winWithoutRecordLabel = new javax.swing.JLabel();
        winWithoutRecordLabel1 = new javax.swing.JLabel();
        finishWinWithoutRecordGameButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        bagDialog = new javax.swing.JDialog();
        bagPanel = new javax.swing.JPanel();
        bagLabel = new javax.swing.JLabel();
        smallHealingElixirRadioButton = new javax.swing.JRadioButton();
        bigHealingElixirRadioButton = new javax.swing.JRadioButton();
        rebirthElixirRadioButton = new javax.swing.JRadioButton();
        useElixirButton = new javax.swing.JButton();
        elixirsButtonGroup = new javax.swing.ButtonGroup();
        elixirRestrictionDialog = new javax.swing.JDialog();
        elixirRestrictionPanel = new javax.swing.JPanel();
        elixirRestrictionLabel1 = new javax.swing.JLabel();
        elixirRestrictionLabel2 = new javax.swing.JLabel();
        closeElixirRestrictionButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        chooseLocationsDialog = new javax.swing.JDialog();
        chooseLocationsPanel = new javax.swing.JPanel();
        junglesCheckBox = new javax.swing.JCheckBox();
        deadForestCheckBox = new javax.swing.JCheckBox();
        campCheckBox = new javax.swing.JCheckBox();
        harborCheckBox = new javax.swing.JCheckBox();
        hellCheckBox = new javax.swing.JCheckBox();
        skyCastleCheckBox = new javax.swing.JCheckBox();
        titlePicture = new javax.swing.JLabel();
        chooseLocationsButton = new javax.swing.JButton();
        chooseCharactericticDialog = new javax.swing.JDialog();
        chooseCharacteristicPanel = new javax.swing.JPanel();
        chooseCharacteristicLabel = new javax.swing.JLabel();
        damageRadioButton = new javax.swing.JRadioButton();
        healthRadioButton = new javax.swing.JRadioButton();
        chooseCharacteristicButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        charactericticsButtonGroup = new javax.swing.ButtonGroup();
        menuPanel = new javax.swing.JPanel();
        gameNameAndPictureLabel = new javax.swing.JLabel();
        startGameButton = new javax.swing.JButton();
        showResultsButton = new javax.swing.JButton();

        fightFrame.setMinimumSize(new java.awt.Dimension(1000, 700));
        fightFrame.setResizable(false);
        fightFrame.setSize(new java.awt.Dimension(1000, 700));

        fightPanel.setBackground(new java.awt.Color(255, 255, 255));
        fightPanel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        fightPanel.setMaximumSize(new java.awt.Dimension(1000, 700));
        fightPanel.setMinimumSize(new java.awt.Dimension(1000, 700));
        fightPanel.setPreferredSize(new java.awt.Dimension(1000, 700));
        fightPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cursePicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/метка.png"))); // NOI18N
        cursePicture.setText("jLabel5");
        cursePicture.setMaximumSize(new java.awt.Dimension(500, 497));
        cursePicture.setMinimumSize(new java.awt.Dimension(500, 497));
        cursePicture.setPreferredSize(new java.awt.Dimension(500, 497));
        fightPanel.add(cursePicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 100, 500, 497));

        playerPictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Kitana.png"))); // NOI18N
        fightPanel.add(playerPictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 175, -1, -1));

        attackButton.setBackground(new java.awt.Color(255, 0, 0));
        attackButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        attackButton.setText("Атаковать");
        attackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackButtonActionPerformed(evt);
            }
        });
        fightPanel.add(attackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 570, 110, 44));

        defendButton.setBackground(new java.awt.Color(255, 204, 0));
        defendButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        defendButton.setText("Защититься");
        defendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defendButtonActionPerformed(evt);
            }
        });
        fightPanel.add(defendButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 570, 109, 44));

        playerHealthProgressBar.setBackground(new java.awt.Color(204, 204, 204));
        playerHealthProgressBar.setForeground(new java.awt.Color(51, 255, 51));
        playerHealthProgressBar.setMaximum(80);
        playerHealthProgressBar.setMinimum(-1);
        fightPanel.add(playerHealthProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 80, 177, 32));

        enemyPictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Соня.png"))); // NOI18N
        fightPanel.add(enemyPictureLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 175, 300, -1));

        enemyHealthProgressBar.setBackground(new java.awt.Color(204, 204, 204));
        enemyHealthProgressBar.setForeground(new java.awt.Color(0, 255, 0));
        enemyHealthProgressBar.setMinimum(-1);
        fightPanel.add(enemyHealthProgressBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, 162, 32));

        enemyNameLabel.setBackground(new java.awt.Color(0, 0, 0));
        enemyNameLabel.setFont(new java.awt.Font("Comic Sans MS", 2, 18)); // NOI18N
        enemyNameLabel.setForeground(new java.awt.Color(204, 255, 255));
        enemyNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        enemyNameLabel.setText("Sonya Blade (солдат)");
        enemyNameLabel.setMaximumSize(new java.awt.Dimension(300, 26));
        enemyNameLabel.setMinimumSize(new java.awt.Dimension(300, 26));
        enemyNameLabel.setPreferredSize(new java.awt.Dimension(300, 26));
        fightPanel.add(enemyNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 500, 300, 29));

        enemyDamageLabel.setBackground(new java.awt.Color(255, 255, 255));
        enemyDamageLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        enemyDamageLabel.setForeground(new java.awt.Color(204, 255, 255));
        enemyDamageLabel.setText("Damage");
        fightPanel.add(enemyDamageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 62, -1));

        playerDamageLabel.setBackground(new java.awt.Color(255, 255, 255));
        playerDamageLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        playerDamageLabel.setForeground(new java.awt.Color(204, 255, 255));
        playerDamageLabel.setText("Damage");
        fightPanel.add(playerDamageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 120, 62, -1));

        playerQuantityDamageLabel.setBackground(new java.awt.Color(255, 255, 255));
        playerQuantityDamageLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        playerQuantityDamageLabel.setForeground(new java.awt.Color(255, 0, 0));
        playerQuantityDamageLabel.setText("16");
        fightPanel.add(playerQuantityDamageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 120, 40, -1));

        enemyQuantityDamageLabel.setBackground(new java.awt.Color(255, 255, 255));
        enemyQuantityDamageLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        enemyQuantityDamageLabel.setForeground(new java.awt.Color(255, 0, 0));
        enemyQuantityDamageLabel.setText("16");
        fightPanel.add(enemyQuantityDamageLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 120, 40, -1));

        playerLevelLabel.setBackground(new java.awt.Color(255, 255, 255));
        playerLevelLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        playerLevelLabel.setForeground(new java.awt.Color(204, 255, 255));
        playerLevelLabel.setText("0 уровень");
        fightPanel.add(playerLevelLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 30, -1, -1));

        playerQuantityHeathLabel.setBackground(new java.awt.Color(255, 255, 255));
        playerQuantityHeathLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        playerQuantityHeathLabel.setForeground(new java.awt.Color(204, 255, 255));
        playerQuantityHeathLabel.setText("80/80");
        fightPanel.add(playerQuantityHeathLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 82, -1, -1));

        enemyQuantityHealthLabel.setBackground(new java.awt.Color(255, 255, 255));
        enemyQuantityHealthLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        enemyQuantityHealthLabel.setForeground(new java.awt.Color(204, 255, 255));
        enemyQuantityHealthLabel.setText("80/80");
        fightPanel.add(enemyQuantityHealthLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 82, -1, -1));

        experienceLabel.setBackground(new java.awt.Color(255, 255, 255));
        experienceLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        experienceLabel.setForeground(new java.awt.Color(204, 255, 255));
        experienceLabel.setText("experience");
        fightPanel.add(experienceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, -1, -1));

        pointsLabel.setBackground(new java.awt.Color(255, 255, 255));
        pointsLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        pointsLabel.setForeground(new java.awt.Color(204, 255, 255));
        pointsLabel.setText("points");
        fightPanel.add(pointsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        quantityExperienceLabel.setBackground(new java.awt.Color(255, 255, 255));
        quantityExperienceLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        quantityExperienceLabel.setForeground(new java.awt.Color(204, 255, 255));
        quantityExperienceLabel.setText("0/40");
        fightPanel.add(quantityExperienceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 50, -1, -1));

        quantityPointsLabel.setBackground(new java.awt.Color(255, 255, 255));
        quantityPointsLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        quantityPointsLabel.setForeground(new java.awt.Color(204, 255, 255));
        quantityPointsLabel.setText("00");
        fightPanel.add(quantityPointsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 50, -1, -1));

        enemyLevelLabel.setBackground(new java.awt.Color(255, 255, 255));
        enemyLevelLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        enemyLevelLabel.setForeground(new java.awt.Color(204, 255, 255));
        enemyLevelLabel.setText("1 уровень");
        fightPanel.add(enemyLevelLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 30, -1, -1));

        turnInfoLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        turnInfoLabel.setForeground(new java.awt.Color(204, 255, 255));
        turnInfoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fightPanel.add(turnInfoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, 220, 43));

        commentAboutFightLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        commentAboutFightLabel.setForeground(new java.awt.Color(204, 255, 255));
        commentAboutFightLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fightPanel.add(commentAboutFightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 210, 310, 35));

        playerNameLabel.setFont(new java.awt.Font("Comic Sans MS", 2, 24)); // NOI18N
        playerNameLabel.setForeground(new java.awt.Color(204, 255, 255));
        playerNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        playerNameLabel.setText("Kitana ");
        fightPanel.add(playerNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 500, 90, 24));

        specialCommentAboutFightLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        specialCommentAboutFightLabel.setForeground(new java.awt.Color(204, 255, 255));
        specialCommentAboutFightLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fightPanel.add(specialCommentAboutFightLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 280, 227, 38));

        goodsButton.setBackground(new java.awt.Color(174, 183, 106));
        goodsButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        goodsButton.setText("Предметы");
        goodsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goodsButtonActionPerformed(evt);
            }
        });
        fightPanel.add(goodsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 570, 110, 44));

        curseButton.setBackground(new java.awt.Color(0, 204, 204));
        curseButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        curseButton.setText("Проклясть");
        curseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curseButtonActionPerformed(evt);
            }
        });
        fightPanel.add(curseButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 570, 110, 44));

        locationPicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/Небесный_храм.png"))); // NOI18N
        fightPanel.add(locationPicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 700));

        javax.swing.GroupLayout fightFrameLayout = new javax.swing.GroupLayout(fightFrame.getContentPane());
        fightFrame.getContentPane().setLayout(fightFrameLayout);
        fightFrameLayout.setHorizontalGroup(
            fightFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fightFrameLayout.createSequentialGroup()
                .addComponent(fightPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 1000, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        fightFrameLayout.setVerticalGroup(
            fightFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fightPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        infoAboutWinnerDialog.setMinimumSize(new java.awt.Dimension(560, 395));
        infoAboutWinnerDialog.setResizable(false);
        infoAboutWinnerDialog.setSize(new java.awt.Dimension(560, 395));
        infoAboutWinnerDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        infoAboutWinnerPanel.setBackground(new java.awt.Color(179, 226, 217));
        infoAboutWinnerPanel.setMaximumSize(new java.awt.Dimension(560, 395));
        infoAboutWinnerPanel.setMinimumSize(new java.awt.Dimension(560, 395));
        infoAboutWinnerPanel.setPreferredSize(new java.awt.Dimension(560, 395));
        infoAboutWinnerPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        winnerNameLabel.setBackground(new java.awt.Color(204, 204, 204));
        winnerNameLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        winnerNameLabel.setForeground(java.awt.Color.red);
        winnerNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        winnerNameLabel.setText("jLabel18");
        winnerNameLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        infoAboutWinnerPanel.add(winnerNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(17, 60, 520, 143));

        closeInfoAboutWinnerButton.setBackground(new java.awt.Color(0, 0, 0));
        closeInfoAboutWinnerButton.setFont(new java.awt.Font("Comic Sans MS", 0, 30)); // NOI18N
        closeInfoAboutWinnerButton.setForeground(java.awt.Color.red);
        closeInfoAboutWinnerButton.setText("Дальше");
        closeInfoAboutWinnerButton.setBorder(null);
        closeInfoAboutWinnerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeInfoAboutWinnerButtonActionPerformed(evt);
            }
        });
        infoAboutWinnerPanel.add(closeInfoAboutWinnerButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 280, 180, 60));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/infoLogo.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(560, 395));
        jLabel1.setMinimumSize(new java.awt.Dimension(560, 395));
        jLabel1.setPreferredSize(new java.awt.Dimension(560, 395));
        infoAboutWinnerPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 395));

        infoAboutWinnerDialog.getContentPane().add(infoAboutWinnerPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 395));

        winWithRecordDialog.setMinimumSize(new java.awt.Dimension(560, 395));
        winWithRecordDialog.setResizable(false);
        winWithRecordDialog.setSize(new java.awt.Dimension(560, 395));
        winWithRecordDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        winWithRecordPanel.setBackground(new java.awt.Color(0, 0, 0));
        winWithRecordPanel.setForeground(java.awt.Color.red);
        winWithRecordPanel.setMaximumSize(new java.awt.Dimension(560, 395));
        winWithRecordPanel.setMinimumSize(new java.awt.Dimension(560, 395));
        winWithRecordPanel.setPreferredSize(new java.awt.Dimension(560, 395));
        winWithRecordPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        winWithRecordLabel.setFont(new java.awt.Font("Comic Sans MS", 3, 30)); // NOI18N
        winWithRecordLabel.setForeground(new java.awt.Color(255, 0, 0));
        winWithRecordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        winWithRecordLabel.setText("<html>Победа не на Вашей стороне</html>");
        winWithRecordPanel.add(winWithRecordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 440, -1));

        nameForRecordTableTextField.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        nameForRecordTableTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nameForRecordTableTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameForRecordTableTextFieldActionPerformed(evt);
            }
        });
        winWithRecordPanel.add(nameForRecordTableTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 312, 56));

        winWithRecordLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 20)); // NOI18N
        winWithRecordLabel1.setForeground(java.awt.Color.red);
        winWithRecordLabel1.setText("<html>Введите имя своего персонажа для добавления результата в таблицу рекордов</html>");
        winWithRecordPanel.add(winWithRecordLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 490, 90));

        finishWinWithRecordGameButton.setBackground(new java.awt.Color(0, 0, 0));
        finishWinWithRecordGameButton.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        finishWinWithRecordGameButton.setForeground(java.awt.Color.red);
        finishWinWithRecordGameButton.setText("Закончить игру");
        finishWinWithRecordGameButton.setBorder(null);
        finishWinWithRecordGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishWinWithRecordGameButtonActionPerformed(evt);
            }
        });
        winWithRecordPanel.add(finishWinWithRecordGameButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 300, -1, 50));

        backgroundImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/infoLogo.jpg"))); // NOI18N
        winWithRecordPanel.add(backgroundImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 395));

        winWithRecordDialog.getContentPane().add(winWithRecordPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 395));

        recordsTableDialog.setBackground(new java.awt.Color(0, 0, 0));
        recordsTableDialog.setMinimumSize(new java.awt.Dimension(594, 520));
        recordsTableDialog.setResizable(false);

        recordsTablePanel.setBackground(new java.awt.Color(0, 0, 0));
        recordsTablePanel.setMaximumSize(new java.awt.Dimension(594, 520));
        recordsTablePanel.setMinimumSize(new java.awt.Dimension(594, 520));
        recordsTablePanel.setPreferredSize(new java.awt.Dimension(594, 520));
        recordsTablePanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        recordsTableLabel.setFont(new java.awt.Font("Century", 1, 36)); // NOI18N
        recordsTableLabel.setForeground(new java.awt.Color(255, 0, 51));
        recordsTableLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        recordsTableLabel.setText("Таблица рекордов");
        recordsTablePanel.add(recordsTableLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 351, 43));

        recordsTableScrollPane.setBackground(new java.awt.Color(0, 0, 0));
        recordsTableScrollPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        recordsTableScrollPane.setForeground(new java.awt.Color(255, 0, 51));

        recordsTable.setBackground(new java.awt.Color(0, 0, 0));
        recordsTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102)));
        recordsTable.setForeground(new java.awt.Color(255, 0, 51));
        recordsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Имя", "Количество баллов"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        recordsTable.setGridColor(new java.awt.Color(102, 102, 102));
        recordsTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        recordsTable.setSelectionForeground(new java.awt.Color(255, 0, 51));
        recordsTableScrollPane.setViewportView(recordsTable);

        recordsTablePanel.add(recordsTableScrollPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 527, 262));

        closeRecordsTableButton.setBackground(new java.awt.Color(0, 0, 0));
        closeRecordsTableButton.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        closeRecordsTableButton.setForeground(new java.awt.Color(255, 0, 0));
        closeRecordsTableButton.setText("Закрыть");
        closeRecordsTableButton.setBorder(null);
        closeRecordsTableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeRecordsTableButtonActionPerformed(evt);
            }
        });
        recordsTablePanel.add(closeRecordsTableButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(445, 434, 143, 43));

        shortLogoLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        shortLogoLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/mortal_kombat_short_logo.jpg"))); // NOI18N
        shortLogoLabel.setText("jLabel1");
        shortLogoLabel.setMaximumSize(new java.awt.Dimension(135, 125));
        shortLogoLabel.setMinimumSize(new java.awt.Dimension(135, 125));
        shortLogoLabel.setPreferredSize(new java.awt.Dimension(135, 125));
        recordsTablePanel.add(shortLogoLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        javax.swing.GroupLayout recordsTableDialogLayout = new javax.swing.GroupLayout(recordsTableDialog.getContentPane());
        recordsTableDialog.getContentPane().setLayout(recordsTableDialogLayout);
        recordsTableDialogLayout.setHorizontalGroup(
            recordsTableDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(recordsTablePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        recordsTableDialogLayout.setVerticalGroup(
            recordsTableDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(recordsTablePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        winWithoutRecordDialog.setMinimumSize(new java.awt.Dimension(560, 395));
        winWithoutRecordDialog.setResizable(false);
        winWithoutRecordDialog.setSize(new java.awt.Dimension(560, 395));
        winWithoutRecordDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        winWithoutRecordPanel.setBackground(new java.awt.Color(255, 204, 255));
        winWithoutRecordPanel.setMaximumSize(new java.awt.Dimension(560, 395));
        winWithoutRecordPanel.setMinimumSize(new java.awt.Dimension(560, 395));
        winWithoutRecordPanel.setPreferredSize(new java.awt.Dimension(560, 395));
        winWithoutRecordPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        winWithoutRecordLabel.setFont(new java.awt.Font("Comic Sans MS", 3, 32)); // NOI18N
        winWithoutRecordLabel.setForeground(new java.awt.Color(255, 0, 0));
        winWithoutRecordLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        winWithoutRecordLabel.setText("<html>Победа не на Вашей стороне</html>");
        winWithoutRecordPanel.add(winWithoutRecordLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 460, 90));

        winWithoutRecordLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 24)); // NOI18N
        winWithoutRecordLabel1.setForeground(java.awt.Color.red);
        winWithoutRecordLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        winWithoutRecordLabel1.setText("<html>К сожалению,  Ваш результат не попал в топ 10</html>");
        winWithoutRecordPanel.add(winWithoutRecordLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 350, 70));

        finishWinWithoutRecordGameButton.setBackground(new java.awt.Color(0, 0, 0));
        finishWinWithoutRecordGameButton.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        finishWinWithoutRecordGameButton.setForeground(java.awt.Color.red);
        finishWinWithoutRecordGameButton.setText("Закончить игру");
        finishWinWithoutRecordGameButton.setBorder(null);
        finishWinWithoutRecordGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishWinWithoutRecordGameButtonActionPerformed(evt);
            }
        });
        winWithoutRecordPanel.add(finishWinWithoutRecordGameButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 300, 210, 51));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/infoLogo.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jLabel2.setMaximumSize(new java.awt.Dimension(560, 395));
        jLabel2.setMinimumSize(new java.awt.Dimension(560, 395));
        jLabel2.setPreferredSize(new java.awt.Dimension(560, 395));
        winWithoutRecordPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 395));

        winWithoutRecordDialog.getContentPane().add(winWithoutRecordPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 395));

        bagPanel.setBackground(new java.awt.Color(190, 182, 135));

        bagLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        bagLabel.setForeground(new java.awt.Color(51, 51, 51));
        bagLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bagLabel.setText("Мешок предметов");

        smallHealingElixirRadioButton.setBackground(new java.awt.Color(190, 182, 135));
        elixirsButtonGroup.add(smallHealingElixirRadioButton);
        smallHealingElixirRadioButton.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        smallHealingElixirRadioButton.setText("Малое зелье лечение, 0 шт");
        smallHealingElixirRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smallHealingElixirRadioButtonActionPerformed(evt);
            }
        });

        bigHealingElixirRadioButton.setBackground(new java.awt.Color(190, 182, 135));
        elixirsButtonGroup.add(bigHealingElixirRadioButton);
        bigHealingElixirRadioButton.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        bigHealingElixirRadioButton.setText("Большое зелье лечение, 0 шт");
        bigHealingElixirRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bigHealingElixirRadioButtonActionPerformed(evt);
            }
        });

        rebirthElixirRadioButton.setBackground(new java.awt.Color(190, 182, 135));
        elixirsButtonGroup.add(rebirthElixirRadioButton);
        rebirthElixirRadioButton.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        rebirthElixirRadioButton.setText("Крест возрождения, 0 шт");

        useElixirButton.setBackground(new java.awt.Color(239, 237, 14));
        useElixirButton.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        useElixirButton.setText("Использовать");
        useElixirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                useElixirButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bagPanelLayout = new javax.swing.GroupLayout(bagPanel);
        bagPanel.setLayout(bagPanelLayout);
        bagPanelLayout.setHorizontalGroup(
            bagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bagPanelLayout.createSequentialGroup()
                .addGroup(bagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bagPanelLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(bagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bigHealingElixirRadioButton)
                            .addComponent(rebirthElixirRadioButton, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(smallHealingElixirRadioButton, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bagLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(bagPanelLayout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(useElixirButton)))
                .addContainerGap(105, Short.MAX_VALUE))
        );
        bagPanelLayout.setVerticalGroup(
            bagPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bagPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(bagLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(smallHealingElixirRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bigHealingElixirRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rebirthElixirRadioButton)
                .addGap(50, 50, 50)
                .addComponent(useElixirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout bagDialogLayout = new javax.swing.GroupLayout(bagDialog.getContentPane());
        bagDialog.getContentPane().setLayout(bagDialogLayout);
        bagDialogLayout.setHorizontalGroup(
            bagDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bagPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        bagDialogLayout.setVerticalGroup(
            bagDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bagPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        elixirRestrictionDialog.setMinimumSize(new java.awt.Dimension(400, 300));
        elixirRestrictionDialog.setResizable(false);
        elixirRestrictionDialog.setSize(new java.awt.Dimension(400, 300));
        elixirRestrictionDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        elixirRestrictionPanel.setBackground(new java.awt.Color(243, 120, 120));
        elixirRestrictionPanel.setMaximumSize(new java.awt.Dimension(400, 300));
        elixirRestrictionPanel.setMinimumSize(new java.awt.Dimension(400, 300));
        elixirRestrictionPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        elixirRestrictionLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        elixirRestrictionLabel1.setForeground(new java.awt.Color(204, 255, 255));
        elixirRestrictionLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        elixirRestrictionLabel1.setText("Вы не можете использовать ");
        elixirRestrictionPanel.add(elixirRestrictionLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, 58));

        elixirRestrictionLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 24)); // NOI18N
        elixirRestrictionLabel2.setForeground(new java.awt.Color(204, 255, 255));
        elixirRestrictionLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        elixirRestrictionLabel2.setText("этот предмет");
        elixirRestrictionPanel.add(elixirRestrictionLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 230, -1));

        closeElixirRestrictionButton.setBackground(new java.awt.Color(204, 204, 204));
        closeElixirRestrictionButton.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        closeElixirRestrictionButton.setForeground(new java.awt.Color(51, 51, 51));
        closeElixirRestrictionButton.setText("ОК");
        closeElixirRestrictionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeElixirRestrictionButtonActionPerformed(evt);
            }
        });
        elixirRestrictionPanel.add(closeElixirRestrictionButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 101, 37));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/restriction.jpg"))); // NOI18N
        elixirRestrictionPanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        elixirRestrictionDialog.getContentPane().add(elixirRestrictionPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        chooseLocationsDialog.setBackground(new java.awt.Color(0, 0, 0));
        chooseLocationsDialog.setMinimumSize(new java.awt.Dimension(530, 500));
        chooseLocationsDialog.setResizable(false);
        chooseLocationsDialog.setSize(new java.awt.Dimension(530, 500));
        chooseLocationsDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chooseLocationsPanel.setBackground(new java.awt.Color(0, 0, 0));
        chooseLocationsPanel.setMaximumSize(new java.awt.Dimension(530, 500));
        chooseLocationsPanel.setMinimumSize(new java.awt.Dimension(530, 500));
        chooseLocationsPanel.setPreferredSize(new java.awt.Dimension(530, 500));
        chooseLocationsPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        junglesCheckBox.setBackground(new java.awt.Color(0, 0, 0));
        junglesCheckBox.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        junglesCheckBox.setForeground(new java.awt.Color(172, 140, 115));
        junglesCheckBox.setText("Куатанские джунгли");
        junglesCheckBox.setName("Куатанские джунгли"); // NOI18N
        junglesCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                junglesCheckBoxActionPerformed(evt);
            }
        });
        chooseLocationsPanel.add(junglesCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 280, -1));

        deadForestCheckBox.setBackground(new java.awt.Color(0, 0, 0));
        deadForestCheckBox.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        deadForestCheckBox.setForeground(new java.awt.Color(172, 140, 115));
        deadForestCheckBox.setText("Мёртвый лес");
        deadForestCheckBox.setName("Мёртвый лес"); // NOI18N
        deadForestCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deadForestCheckBoxActionPerformed(evt);
            }
        });
        chooseLocationsPanel.add(deadForestCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 190, -1));

        campCheckBox.setBackground(new java.awt.Color(0, 0, 0));
        campCheckBox.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        campCheckBox.setForeground(new java.awt.Color(172, 140, 115));
        campCheckBox.setText("Лагерь беженцов");
        campCheckBox.setName("Лагерь беженцов"); // NOI18N
        campCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campCheckBoxActionPerformed(evt);
            }
        });
        chooseLocationsPanel.add(campCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 230, -1));

        harborCheckBox.setBackground(new java.awt.Color(0, 0, 0));
        harborCheckBox.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        harborCheckBox.setForeground(new java.awt.Color(172, 140, 115));
        harborCheckBox.setText("Бухта");
        harborCheckBox.setName("Бухта"); // NOI18N
        harborCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                harborCheckBoxActionPerformed(evt);
            }
        });
        chooseLocationsPanel.add(harborCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 170, -1));

        hellCheckBox.setBackground(new java.awt.Color(0, 0, 0));
        hellCheckBox.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        hellCheckBox.setForeground(new java.awt.Color(172, 140, 115));
        hellCheckBox.setText("Перекрёстки преисподни");
        hellCheckBox.setName("Перекрёстки преисподни"); // NOI18N
        hellCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hellCheckBoxActionPerformed(evt);
            }
        });
        chooseLocationsPanel.add(hellCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 330, -1));

        skyCastleCheckBox.setBackground(new java.awt.Color(0, 0, 0));
        skyCastleCheckBox.setFont(new java.awt.Font("Sylfaen", 0, 24)); // NOI18N
        skyCastleCheckBox.setForeground(new java.awt.Color(172, 140, 115));
        skyCastleCheckBox.setText("Небесный храм");
        skyCastleCheckBox.setName("Небесный храм"); // NOI18N
        skyCastleCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                skyCastleCheckBoxActionPerformed(evt);
            }
        });
        chooseLocationsPanel.add(skyCastleCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, 220, -1));

        titlePicture.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/mk_logo.png"))); // NOI18N
        titlePicture.setText("jLabel1");
        chooseLocationsPanel.add(titlePicture, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, 190));

        chooseLocationsButton.setBackground(new java.awt.Color(0, 0, 0));
        chooseLocationsButton.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        chooseLocationsButton.setForeground(new java.awt.Color(172, 140, 115));
        chooseLocationsButton.setText("Выбрать локации");
        chooseLocationsButton.setBorder(null);
        chooseLocationsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseLocationsButtonActionPerformed(evt);
            }
        });
        chooseLocationsPanel.add(chooseLocationsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 410, -1, -1));

        chooseLocationsDialog.getContentPane().add(chooseLocationsPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, 500));

        chooseCharactericticDialog.setMinimumSize(new java.awt.Dimension(560, 395));
        chooseCharactericticDialog.setResizable(false);
        chooseCharactericticDialog.setSize(new java.awt.Dimension(560, 395));
        chooseCharactericticDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chooseCharacteristicPanel.setMaximumSize(new java.awt.Dimension(560, 395));
        chooseCharacteristicPanel.setMinimumSize(new java.awt.Dimension(560, 395));
        chooseCharacteristicPanel.setPreferredSize(new java.awt.Dimension(560, 395));
        chooseCharacteristicPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        chooseCharacteristicLabel.setFont(new java.awt.Font("Segoe UI", 3, 26)); // NOI18N
        chooseCharacteristicLabel.setForeground(java.awt.Color.red);
        chooseCharacteristicLabel.setText("<html>Поздравляем, Вы достигли нового уровня. Выберите, какую характеристику Вы хотите улучшить</html>");
        chooseCharacteristicPanel.add(chooseCharacteristicLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 30, 390, -1));

        damageRadioButton.setBackground(new java.awt.Color(0, 0, 0));
        charactericticsButtonGroup.add(damageRadioButton);
        damageRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        damageRadioButton.setForeground(java.awt.Color.red);
        damageRadioButton.setText("Урон");
        damageRadioButton.setBorder(null);
        chooseCharacteristicPanel.add(damageRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, -1, -1));

        healthRadioButton.setBackground(new java.awt.Color(0, 0, 0));
        charactericticsButtonGroup.add(healthRadioButton);
        healthRadioButton.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        healthRadioButton.setForeground(java.awt.Color.red);
        healthRadioButton.setText("Здоровье");
        healthRadioButton.setBorder(null);
        chooseCharacteristicPanel.add(healthRadioButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, -1, -1));

        chooseCharacteristicButton.setBackground(new java.awt.Color(0, 0, 0));
        chooseCharacteristicButton.setFont(new java.awt.Font("Segoe UI", 1, 30)); // NOI18N
        chooseCharacteristicButton.setForeground(java.awt.Color.red);
        chooseCharacteristicButton.setText("Выбрать");
        chooseCharacteristicButton.setBorder(null);
        chooseCharacteristicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseCharacteristicButtonActionPerformed(evt);
            }
        });
        chooseCharacteristicPanel.add(chooseCharacteristicButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 300, -1, -1));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/infoLogo.jpg"))); // NOI18N
        chooseCharacteristicPanel.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 395));

        chooseCharactericticDialog.getContentPane().add(chooseCharacteristicPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 395));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(530, 485));
        setMinimumSize(new java.awt.Dimension(530, 485));
        setResizable(false);

        menuPanel.setBackground(new java.awt.Color(0, 0, 0));
        menuPanel.setForeground(new java.awt.Color(204, 0, 0));
        menuPanel.setMaximumSize(new java.awt.Dimension(530, 485));
        menuPanel.setMinimumSize(new java.awt.Dimension(530, 485));

        gameNameAndPictureLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Pictures/mortal_combat.jpg"))); // NOI18N

        startGameButton.setBackground(new java.awt.Color(0, 0, 0));
        startGameButton.setFont(new java.awt.Font("Comic Sans MS", 1, 36)); // NOI18N
        startGameButton.setForeground(new java.awt.Color(252, 35, 9));
        startGameButton.setText("Начать новую игру");
        startGameButton.setBorder(null);
        startGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startGameButtonActionPerformed(evt);
            }
        });

        showResultsButton.setBackground(new java.awt.Color(0, 0, 0));
        showResultsButton.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        showResultsButton.setForeground(java.awt.Color.red);
        showResultsButton.setText("Посмотреть таблицу \nрезультатов");
        showResultsButton.setBorder(null);
        showResultsButton.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        showResultsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showResultsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addComponent(gameNameAndPictureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(showResultsButton))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(startGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addComponent(showResultsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(startGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(gameNameAndPictureLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(menuPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Функция создания нового экземпляра игры и обнуления инвентаря игрока
     *
     * @see JFrames#items
     */
    private void setGame() {
        game = new Game();
        game.ReadFromExcel();
        game.WriteToTable(recordsTable);
        items[0] = new Items("Малое зелье лечение", 0);
        items[1] = new Items("Большое зелье лечение", 0);
        items[2] = new Items("Крест возрождения", 0);
    }
    private void startGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startGameButtonActionPerformed
        setGame();
        chooseLocationsDialog.setVisible(true);

    }//GEN-LAST:event_startGameButtonActionPerformed

    private void attackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackButtonActionPerformed
        game.fight.Hit(player, enemy, 1, enemyQuantityHealthLabel, playerQuantityHeathLabel, infoAboutWinnerDialog,
                winnerNameLabel, game.action, playerHealthProgressBar, enemyHealthProgressBar, winWithRecordDialog,
                winWithoutRecordDialog, fightFrame, game.getResults(), winWithRecordLabel, winWithoutRecordLabel,
                turnInfoLabel, specialCommentAboutFightLabel, commentAboutFightLabel, items, rebirthElixirRadioButton);
        checkLevel();

    }//GEN-LAST:event_attackButtonActionPerformed

    private void defendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defendButtonActionPerformed
        game.fight.Hit(player, enemy, 0, enemyQuantityHealthLabel, playerQuantityHeathLabel, infoAboutWinnerDialog,
                winnerNameLabel, game.action, playerHealthProgressBar, enemyHealthProgressBar, winWithRecordDialog,
                winWithoutRecordDialog, fightFrame, game.getResults(), winWithRecordLabel, winWithoutRecordLabel,
                turnInfoLabel, specialCommentAboutFightLabel, commentAboutFightLabel, items, rebirthElixirRadioButton);
        checkLevel();
    }//GEN-LAST:event_defendButtonActionPerformed
    /**
     * Функция проверки достиг ли игрок нового уровня
     */
    private void checkLevel() {
        if (currentLevel < player.getLevel()) {
            chooseCharactericticDialog.setVisible(true);
            currentLevel += 1;
        }
    }
    private void closeInfoAboutWinnerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeInfoAboutWinnerButtonActionPerformed
        startRound();
        infoAboutWinnerDialog.dispose();
    }//GEN-LAST:event_closeInfoAboutWinnerButtonActionPerformed

    private void nameForRecordTableTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameForRecordTableTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameForRecordTableTextFieldActionPerformed

    private void finishWinWithRecordGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishWinWithRecordGameButtonActionPerformed
        try {
            game.EndGameTop(player, nameForRecordTableTextField, recordsTable);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane, "Не удалось добавить Ваш результат в таблицу рекордов", "Ошибка", JOptionPane.ERROR_MESSAGE);
        }
        winWithRecordDialog.dispose();
        nameForRecordTableTextField.setText("");
    }//GEN-LAST:event_finishWinWithRecordGameButtonActionPerformed

    private void closeRecordsTableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeRecordsTableButtonActionPerformed
        recordsTableDialog.dispose();
    }//GEN-LAST:event_closeRecordsTableButtonActionPerformed

    private void showResultsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showResultsButtonActionPerformed
        recordsTableDialog.setVisible(true);
    }//GEN-LAST:event_showResultsButtonActionPerformed

    private void finishWinWithoutRecordGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishWinWithoutRecordGameButtonActionPerformed
        winWithoutRecordDialog.dispose();
    }//GEN-LAST:event_finishWinWithoutRecordGameButtonActionPerformed

    private void smallHealingElixirRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smallHealingElixirRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_smallHealingElixirRadioButtonActionPerformed

    private void bigHealingElixirRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bigHealingElixirRadioButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bigHealingElixirRadioButtonActionPerformed

    private void useElixirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_useElixirButtonActionPerformed
        String nameElixirButton = "";
        if (smallHealingElixirRadioButton.isSelected()) {
            nameElixirButton = "smallHealingElixir";
        } else if (bigHealingElixirRadioButton.isSelected()) {
            nameElixirButton = "bigHealingElixir";
        } else if (rebirthElixirRadioButton.isSelected()) {
            nameElixirButton = "rebirthElixir";
        }
        game.action.UseItem(player, items, nameElixirButton, elixirRestrictionDialog, bagDialog);
        game.action.setHealthProgressBar(player, playerHealthProgressBar);
        playerQuantityHeathLabel.setText(player.getHealth() + "/" + player.getMaxHealth());
        game.textChanger.BagText(items, smallHealingElixirRadioButton, bigHealingElixirRadioButton, rebirthElixirRadioButton);
    }//GEN-LAST:event_useElixirButtonActionPerformed

    private void goodsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goodsButtonActionPerformed
        bagDialog.setVisible(true);
        bagDialog.setBounds(300, 200, 430, 350);
    }//GEN-LAST:event_goodsButtonActionPerformed

    private void closeElixirRestrictionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeElixirRestrictionButtonActionPerformed
        elixirRestrictionDialog.dispose();
    }//GEN-LAST:event_closeElixirRestrictionButtonActionPerformed

    private void junglesCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_junglesCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_junglesCheckBoxActionPerformed

    private void deadForestCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deadForestCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deadForestCheckBoxActionPerformed

    private void campCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campCheckBoxActionPerformed

    private void harborCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_harborCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_harborCheckBoxActionPerformed

    private void hellCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hellCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hellCheckBoxActionPerformed

    private void skyCastleCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_skyCastleCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_skyCastleCheckBoxActionPerformed
    /**
     * Функция реализации логики после выбора игроком локаций
     *
     * @param evt
     */
    private void chooseLocationsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseLocationsButtonActionPerformed
        // TODO add your handling code here: 
        chosenLocations = new HashMap<String, String>();
        for (JCheckBox location : allLocations.keySet()) {
            if (location.isSelected()) {
                chosenLocations.put(location.getName(), allLocations.get(location));
                location.setSelected(false);
            }
        }
        if (chosenLocations.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Вы должны выбрать хотя бы одну локацию", "Ошибка", JOptionPane.ERROR_MESSAGE);
        } else {
            chooseLocationsDialog.dispose();
            setLocationsOrder();
            player = game.newPlayer(playerHealthProgressBar);
            currentLevel = 0;
            startRound();
        }

    }//GEN-LAST:event_chooseLocationsButtonActionPerformed
    /**
     * Функция реализации логики, когда после достижения нового уровня игрок
     * выбрал какую характеристику хочет прокачать
     *
     * @param evt
     */
    private void chooseCharacteristicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseCharacteristicButtonActionPerformed
        // TODO add your handling code here:
        if (damageRadioButton.isSelected()) {
            game.action.addDamageToPlayer(player);
            startRound();
            chooseCharactericticDialog.dispose();
        } else if (healthRadioButton.isSelected()) {
            game.action.addHealthToPlayer(player);
            startRound();
            chooseCharactericticDialog.dispose();
        }

    }//GEN-LAST:event_chooseCharacteristicButtonActionPerformed
    /**
     * Функция реализации логики при выборе игроком действия "Проклясть"
     *
     * @param evt
     */
    private void curseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_curseButtonActionPerformed
        // TODO add your handling code here:
        cursePicture.setVisible(true);
        new Timer(500, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                cursePicture.setVisible(false);
                ((Timer) e.getSource()).stop(); // Останавливаем таймер
            }
        }).start();
        game.fight.Hit(player, enemy, 2, enemyQuantityHealthLabel, playerQuantityHeathLabel, infoAboutWinnerDialog,
                winnerNameLabel, game.action, playerHealthProgressBar, enemyHealthProgressBar, winWithRecordDialog,
                winWithoutRecordDialog, fightFrame, game.getResults(), winWithRecordLabel, winWithoutRecordLabel,
                turnInfoLabel, specialCommentAboutFightLabel, commentAboutFightLabel, items, rebirthElixirRadioButton);
        checkLevel();

    }//GEN-LAST:event_curseButtonActionPerformed
    /**
     * Функция распределения количества необходимых выигрышей среди локаций
     */
    private void setLocationsOrder() {
        int locationsQuantity = chosenLocations.size();
        int goalVictoryQuantity = 12;
        locationsOrder = new LinkedHashMap<String, Integer>();
        while (locationsQuantity > 0) {
            for (String location : chosenLocations.keySet()) {
                int victoryQuantity = goalVictoryQuantity / locationsQuantity;
                locationsOrder.put(chosenLocations.get(location), victoryQuantity);
                goalVictoryQuantity -= victoryQuantity;
                locationsQuantity -= 1;
            }
        }
    }

    /**
     * Функция установления локации
     *
     * @see JFrames#currentLocation
     */
    private void startRound() {
        boolean chosen = false;
        if (currentVictory < player.getWin()) {
            currentVictory += 1;
            locationsOrder.put(currentLocation, reamainQuantity - 1);
        }
        for (String location : locationsOrder.keySet()) {
            if (chosen) {
                break;
            }
            reamainQuantity = locationsOrder.get(location);
            if (reamainQuantity > 0) {
                currentLocation = location;
                enemy = game.fight.NewRound(player, enemyPictureLabel, playerHealthProgressBar, enemyHealthProgressBar,
                        enemyNameLabel, enemyQuantityDamageLabel, enemyQuantityHealthLabel, game.action, reamainQuantity);
                game.textChanger.NewRoundTexts(player, enemy, quantityPointsLabel, quantityExperienceLabel, playerLevelLabel, enemyLevelLabel, playerQuantityHeathLabel, enemyQuantityHealthLabel, playerQuantityDamageLabel,
                        turnInfoLabel, commentAboutFightLabel, game.fight.moveNumber, items, smallHealingElixirRadioButton, bigHealingElixirRadioButton, rebirthElixirRadioButton);
                locationPicture.setIcon(new ImageIcon(getClass().getResource("/Pictures/"+currentLocation)));
                fightFrame.setVisible(true);
                chosen = true;
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrames.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrames().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attackButton;
    private javax.swing.JLabel backgroundImage;
    private javax.swing.JDialog bagDialog;
    private javax.swing.JLabel bagLabel;
    private javax.swing.JPanel bagPanel;
    private javax.swing.JRadioButton bigHealingElixirRadioButton;
    private javax.swing.JCheckBox campCheckBox;
    private javax.swing.ButtonGroup charactericticsButtonGroup;
    private javax.swing.JDialog chooseCharactericticDialog;
    private javax.swing.JButton chooseCharacteristicButton;
    private javax.swing.JLabel chooseCharacteristicLabel;
    private javax.swing.JPanel chooseCharacteristicPanel;
    private javax.swing.JButton chooseLocationsButton;
    private javax.swing.JDialog chooseLocationsDialog;
    private javax.swing.JPanel chooseLocationsPanel;
    private javax.swing.JButton closeElixirRestrictionButton;
    private javax.swing.JButton closeInfoAboutWinnerButton;
    private javax.swing.JButton closeRecordsTableButton;
    private javax.swing.JLabel commentAboutFightLabel;
    private javax.swing.JButton curseButton;
    private javax.swing.JLabel cursePicture;
    private javax.swing.JRadioButton damageRadioButton;
    private javax.swing.JCheckBox deadForestCheckBox;
    private javax.swing.JButton defendButton;
    private javax.swing.JDialog elixirRestrictionDialog;
    private javax.swing.JLabel elixirRestrictionLabel1;
    private javax.swing.JLabel elixirRestrictionLabel2;
    private javax.swing.JPanel elixirRestrictionPanel;
    private javax.swing.ButtonGroup elixirsButtonGroup;
    private javax.swing.JLabel enemyDamageLabel;
    private javax.swing.JProgressBar enemyHealthProgressBar;
    private javax.swing.JLabel enemyLevelLabel;
    private javax.swing.JLabel enemyNameLabel;
    private javax.swing.JLabel enemyPictureLabel;
    private javax.swing.JLabel enemyQuantityDamageLabel;
    private javax.swing.JLabel enemyQuantityHealthLabel;
    private javax.swing.JLabel experienceLabel;
    private javax.swing.JFrame fightFrame;
    private javax.swing.JPanel fightPanel;
    private javax.swing.JButton finishWinWithRecordGameButton;
    private javax.swing.JButton finishWinWithoutRecordGameButton;
    private javax.swing.JLabel gameNameAndPictureLabel;
    private javax.swing.JButton goodsButton;
    private javax.swing.JCheckBox harborCheckBox;
    private javax.swing.JRadioButton healthRadioButton;
    private javax.swing.JCheckBox hellCheckBox;
    private javax.swing.JDialog infoAboutWinnerDialog;
    private javax.swing.JPanel infoAboutWinnerPanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JCheckBox junglesCheckBox;
    private javax.swing.JLabel locationPicture;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JTextField nameForRecordTableTextField;
    private javax.swing.JLabel playerDamageLabel;
    private javax.swing.JProgressBar playerHealthProgressBar;
    private javax.swing.JLabel playerLevelLabel;
    private javax.swing.JLabel playerNameLabel;
    private javax.swing.JLabel playerPictureLabel;
    private javax.swing.JLabel playerQuantityDamageLabel;
    private javax.swing.JLabel playerQuantityHeathLabel;
    private javax.swing.JLabel pointsLabel;
    private javax.swing.JLabel quantityExperienceLabel;
    private javax.swing.JLabel quantityPointsLabel;
    private javax.swing.JRadioButton rebirthElixirRadioButton;
    private javax.swing.JTable recordsTable;
    private javax.swing.JDialog recordsTableDialog;
    private javax.swing.JLabel recordsTableLabel;
    private javax.swing.JPanel recordsTablePanel;
    private javax.swing.JScrollPane recordsTableScrollPane;
    private javax.swing.JLabel shortLogoLabel;
    private javax.swing.JButton showResultsButton;
    private javax.swing.JCheckBox skyCastleCheckBox;
    private javax.swing.JRadioButton smallHealingElixirRadioButton;
    private javax.swing.JLabel specialCommentAboutFightLabel;
    private javax.swing.JButton startGameButton;
    private javax.swing.JLabel titlePicture;
    private javax.swing.JLabel turnInfoLabel;
    private javax.swing.JButton useElixirButton;
    private javax.swing.JDialog winWithRecordDialog;
    private javax.swing.JLabel winWithRecordLabel;
    private javax.swing.JLabel winWithRecordLabel1;
    private javax.swing.JPanel winWithRecordPanel;
    private javax.swing.JDialog winWithoutRecordDialog;
    private javax.swing.JLabel winWithoutRecordLabel;
    private javax.swing.JLabel winWithoutRecordLabel1;
    private javax.swing.JPanel winWithoutRecordPanel;
    private javax.swing.JLabel winnerNameLabel;
    // End of variables declaration//GEN-END:variables

}